// Copyright (C) 2005-2009 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

#ifndef KMODEL2_IXX
#define KMODEL2_IXX

// Begin prologue.
//
//
// End prologue.

// LabelType
//

inline
unsigned int LabelType::
id () const
{
  return this->id_;
}

inline
unsigned int& LabelType::
id ()
{
  return this->id_;
}

inline
void LabelType::
id (unsigned int x)
{
  this->id_ = x;
}

// Property
//

inline
const ::std::string& Property::
key () const
{
  return this->key_;
}

inline
::std::string& Property::
key ()
{
  return this->key_;
}

inline
void Property::
key (const ::std::string& x)
{
  this->key_ = x;
}

inline
const ::std::string& Property::
value () const
{
  return this->value_;
}

inline
::std::string& Property::
value ()
{
  return this->value_;
}

inline
void Property::
value (const ::std::string& x)
{
  this->value_ = x;
}

// PropertyListType
//

inline
const PropertyListType::Property_sequence& PropertyListType::
Property () const
{
  return this->Property_;
}

inline
PropertyListType::Property_sequence& PropertyListType::
Property ()
{
  return this->Property_;
}

// jProposalType
//

inline
bool jProposalType::
mc () const
{
  return this->mc_;
}

inline
bool& jProposalType::
mc ()
{
  return this->mc_;
}

inline
void jProposalType::
mc (bool x)
{
  this->mc_ = x;
}

inline
const ::std::string& jProposalType::
qname () const
{
  return this->qname_;
}

inline
::std::string& jProposalType::
qname ()
{
  return this->qname_;
}

inline
void jProposalType::
qname (const ::std::string& x)
{
  this->qname_ = x;
}

inline
const jProposalType::Label_sequence& jProposalType::
Label () const
{
  return this->Label_;
}

inline
jProposalType::Label_sequence& jProposalType::
Label ()
{
  return this->Label_;
}

// Image
//

inline
unsigned int Image::
id () const
{
  return this->id_;
}

inline
unsigned int& Image::
id ()
{
  return this->id_;
}

inline
void Image::
id (unsigned int x)
{
  this->id_ = x;
}

inline
const ::std::string& Image::
uri () const
{
  return this->uri_;
}

inline
::std::string& Image::
uri ()
{
  return this->uri_;
}

inline
void Image::
uri (const ::std::string& x)
{
  this->uri_ = x;
}

// ImageListType
//

inline
const ImageListType::Image_sequence& ImageListType::
Image () const
{
  return this->Image_;
}

inline
ImageListType::Image_sequence& ImageListType::
Image ()
{
  return this->Image_;
}

// jGroupType
//

inline
unsigned int jGroupType::
id () const
{
  return this->id_;
}

inline
unsigned int& jGroupType::
id ()
{
  return this->id_;
}

inline
void jGroupType::
id (unsigned int x)
{
  this->id_ = x;
}

inline
const ::std::string& jGroupType::
name () const
{
  return this->name_;
}

inline
::std::string& jGroupType::
name ()
{
  return this->name_;
}

inline
void jGroupType::
name (const ::std::string& x)
{
  this->name_ = x;
}

inline
const ::PropertyListType& jGroupType::
PropertyList () const
{
  return *this->PropertyList_;
}

inline
::PropertyListType& jGroupType::
PropertyList ()
{
  return *this->PropertyList_;
}

inline
void jGroupType::
PropertyList (::PropertyListType* x)
{
  delete this->PropertyList_;
  this->PropertyList_ = x;
}

inline
bool jGroupType::
SourceList_present () const
{
  return this->SourceList_ != 0;
}

inline
void jGroupType::
SourceList_present (bool x)
{
  if (!x)
  {
    delete this->SourceList_;
    this->SourceList_ = 0;
  }
}

inline
const ::SourceList& jGroupType::
SourceList () const
{
  return *this->SourceList_;
}

inline
::SourceList& jGroupType::
SourceList ()
{
  return *this->SourceList_;
}

inline
void jGroupType::
SourceList (::SourceList* x)
{
  delete this->SourceList_;
  this->SourceList_ = x;
}

inline
const ::std::string& jGroupType::
Description () const
{
  return this->Description_;
}

inline
::std::string& jGroupType::
Description ()
{
  return this->Description_;
}

inline
void jGroupType::
Description (const ::std::string& x)
{
  this->Description_ = x;
}

inline
const ::ImageListType& jGroupType::
ImageList () const
{
  return *this->ImageList_;
}

inline
::ImageListType& jGroupType::
ImageList ()
{
  return *this->ImageList_;
}

inline
void jGroupType::
ImageList (::ImageListType* x)
{
  delete this->ImageList_;
  this->ImageList_ = x;
}

inline
const ::std::string& jGroupType::
Text () const
{
  return this->Text_;
}

inline
::std::string& jGroupType::
Text ()
{
  return this->Text_;
}

inline
void jGroupType::
Text (const ::std::string& x)
{
  this->Text_ = x;
}

inline
const ::std::string& jGroupType::
Hint () const
{
  return this->Hint_;
}

inline
::std::string& jGroupType::
Hint ()
{
  return this->Hint_;
}

inline
void jGroupType::
Hint (const ::std::string& x)
{
  this->Hint_ = x;
}

inline
const ::jProposal& jGroupType::
jProposal () const
{
  return *this->jProposal_;
}

inline
::jProposal& jGroupType::
jProposal ()
{
  return *this->jProposal_;
}

inline
void jGroupType::
jProposal (::jProposal* x)
{
  delete this->jProposal_;
  this->jProposal_ = x;
}

inline
const ::jProblemList& jGroupType::
jProblemList () const
{
  return *this->jProblemList_;
}

inline
::jProblemList& jGroupType::
jProblemList ()
{
  return *this->jProblemList_;
}

inline
void jGroupType::
jProblemList (::jProblemList* x)
{
  delete this->jProblemList_;
  this->jProblemList_ = x;
}

// CategoryType
//

inline
unsigned long CategoryType::
id () const
{
  return this->id_;
}

inline
unsigned long& CategoryType::
id ()
{
  return this->id_;
}

inline
void CategoryType::
id (unsigned long x)
{
  this->id_ = x;
}

inline
const ::std::string& CategoryType::
name () const
{
  return this->name_;
}

inline
::std::string& CategoryType::
name ()
{
  return this->name_;
}

inline
void CategoryType::
name (const ::std::string& x)
{
  this->name_ = x;
}

inline
const ::PropertyListType& CategoryType::
PropertyList () const
{
  return *this->PropertyList_;
}

inline
::PropertyListType& CategoryType::
PropertyList ()
{
  return *this->PropertyList_;
}

inline
void CategoryType::
PropertyList (::PropertyListType* x)
{
  delete this->PropertyList_;
  this->PropertyList_ = x;
}

inline
const ::std::string& CategoryType::
Description () const
{
  return this->Description_;
}

inline
::std::string& CategoryType::
Description ()
{
  return this->Description_;
}

inline
void CategoryType::
Description (const ::std::string& x)
{
  this->Description_ = x;
}

inline
const CategoryType::Category_sequence& CategoryType::
Category () const
{
  return this->Category_;
}

inline
CategoryType::Category_sequence& CategoryType::
Category ()
{
  return this->Category_;
}

inline
const CategoryType::jGroup_sequence& CategoryType::
jGroup () const
{
  return this->jGroup_;
}

inline
CategoryType::jGroup_sequence& CategoryType::
jGroup ()
{
  return this->jGroup_;
}

// SourceRef
//

inline
bool SourceRef::
qnameref_present () const
{
  return this->qnameref_present_;
}

inline
void SourceRef::
qnameref_present (bool x)
{
  this->qnameref_present_ = x;
}

inline
const ::std::string& SourceRef::
qnameref () const
{
  return this->qnameref_;
}

inline
::std::string& SourceRef::
qnameref ()
{
  return this->qnameref_;
}

inline
void SourceRef::
qnameref (const ::std::string& x)
{
  this->qnameref_ = x;
  this->qnameref_present_ = true;
}

// SourceList
//

inline
const SourceList::SourceRef_sequence& SourceList::
SourceRef () const
{
  return this->SourceRef_;
}

inline
SourceList::SourceRef_sequence& SourceList::
SourceRef ()
{
  return this->SourceRef_;
}

// jProposalRef
//

inline
const ::std::string& jProposalRef::
qnameref () const
{
  return this->qnameref_;
}

inline
::std::string& jProposalRef::
qnameref ()
{
  return this->qnameref_;
}

inline
void jProposalRef::
qnameref (const ::std::string& x)
{
  this->qnameref_ = x;
}

// jProposal
//

inline
bool jProposal::
jProposalRef_present () const
{
  return this->jProposalRef_present_;
}

inline
void jProposal::
jProposalRef_present (bool x)
{
  this->jProposalRef_present_ = x;
}

inline
const ::jProposalRef& jProposal::
jProposalRef () const
{
  return this->jProposalRef_;
}

inline
::jProposalRef& jProposal::
jProposalRef ()
{
  return this->jProposalRef_;
}

inline
void jProposal::
jProposalRef (const ::jProposalRef& x)
{
  this->jProposalRef_ = x;
  this->jProposalRef_present_ = true;
}

// jProblemList
//

inline
const jProblemList::jProblem_sequence& jProblemList::
jProblem () const
{
  return this->jProblem_;
}

inline
jProblemList::jProblem_sequence& jProblemList::
jProblem ()
{
  return this->jProblem_;
}

// kmx
//

inline
const ::std::string& kmx::
name () const
{
  return this->name_;
}

inline
::std::string& kmx::
name ()
{
  return this->name_;
}

inline
void kmx::
name (const ::std::string& x)
{
  this->name_ = x;
}

inline
const ::std::string& kmx::
version () const
{
  return this->version_;
}

inline
::std::string& kmx::
version ()
{
  return this->version_;
}

inline
void kmx::
version (const ::std::string& x)
{
  this->version_ = x;
}

inline
const ::References& kmx::
References () const
{
  return *this->References_;
}

inline
::References& kmx::
References ()
{
  return *this->References_;
}

inline
void kmx::
References (::References* x)
{
  delete this->References_;
  this->References_ = x;
}

inline
const ::Content& kmx::
Content () const
{
  return *this->Content_;
}

inline
::Content& kmx::
Content ()
{
  return *this->Content_;
}

inline
void kmx::
Content (::Content* x)
{
  delete this->Content_;
  this->Content_ = x;
}

// Solution
//

inline
bool Solution::
idref_present () const
{
  return this->idref_present_;
}

inline
void Solution::
idref_present (bool x)
{
  this->idref_present_ = x;
}

inline
unsigned int Solution::
idref () const
{
  return this->idref_;
}

inline
unsigned int& Solution::
idref ()
{
  return this->idref_;
}

inline
void Solution::
idref (unsigned int x)
{
  this->idref_ = x;
  this->idref_present_ = true;
}

// jProblem
//

inline
unsigned int jProblem::
id () const
{
  return this->id_;
}

inline
unsigned int& jProblem::
id ()
{
  return this->id_;
}

inline
void jProblem::
id (unsigned int x)
{
  this->id_ = x;
}

inline
const ::PropertyListType& jProblem::
PropertyList () const
{
  return *this->PropertyList_;
}

inline
::PropertyListType& jProblem::
PropertyList ()
{
  return *this->PropertyList_;
}

inline
void jProblem::
PropertyList (::PropertyListType* x)
{
  delete this->PropertyList_;
  this->PropertyList_ = x;
}

inline
const ::std::string& jProblem::
Text () const
{
  return this->Text_;
}

inline
::std::string& jProblem::
Text ()
{
  return this->Text_;
}

inline
void jProblem::
Text (const ::std::string& x)
{
  this->Text_ = x;
}

inline
const jProblem::Solution_sequence& jProblem::
Solution () const
{
  return this->Solution_;
}

inline
jProblem::Solution_sequence& jProblem::
Solution ()
{
  return this->Solution_;
}

// References
//

inline
const ::RefSourceList& References::
RefSourceList () const
{
  return *this->RefSourceList_;
}

inline
::RefSourceList& References::
RefSourceList ()
{
  return *this->RefSourceList_;
}

inline
void References::
RefSourceList (::RefSourceList* x)
{
  delete this->RefSourceList_;
  this->RefSourceList_ = x;
}

inline
const ::RefProposalTypeList& References::
RefProposalTypeList () const
{
  return *this->RefProposalTypeList_;
}

inline
::RefProposalTypeList& References::
RefProposalTypeList ()
{
  return *this->RefProposalTypeList_;
}

inline
void References::
RefProposalTypeList (::RefProposalTypeList* x)
{
  delete this->RefProposalTypeList_;
  this->RefProposalTypeList_ = x;
}

// Content
//

inline
const Content::Category_sequence& Content::
Category () const
{
  return this->Category_;
}

inline
Content::Category_sequence& Content::
Category ()
{
  return this->Category_;
}

// RefSourceList
//

inline
const RefSourceList::Source_sequence& RefSourceList::
Source () const
{
  return this->Source_;
}

inline
RefSourceList::Source_sequence& RefSourceList::
Source ()
{
  return this->Source_;
}

// RefProposalTypeList
//

inline
const ::jProposalList& RefProposalTypeList::
jProposalList () const
{
  return *this->jProposalList_;
}

inline
::jProposalList& RefProposalTypeList::
jProposalList ()
{
  return *this->jProposalList_;
}

inline
void RefProposalTypeList::
jProposalList (::jProposalList* x)
{
  delete this->jProposalList_;
  this->jProposalList_ = x;
}

// Source
//

inline
const ::std::string& Source::
qname () const
{
  return this->qname_;
}

inline
::std::string& Source::
qname ()
{
  return this->qname_;
}

inline
void Source::
qname (const ::std::string& x)
{
  this->qname_ = x;
}

inline
const ::std::string& Source::
uri () const
{
  return this->uri_;
}

inline
::std::string& Source::
uri ()
{
  return this->uri_;
}

inline
void Source::
uri (const ::std::string& x)
{
  this->uri_ = x;
}

inline
const ::PropertyListType& Source::
PropertyList () const
{
  return *this->PropertyList_;
}

inline
::PropertyListType& Source::
PropertyList ()
{
  return *this->PropertyList_;
}

inline
void Source::
PropertyList (::PropertyListType* x)
{
  delete this->PropertyList_;
  this->PropertyList_ = x;
}

// jProposalList
//

inline
const jProposalList::jProposal_sequence& jProposalList::
jProposal () const
{
  return this->jProposal_;
}

inline
jProposalList::jProposal_sequence& jProposalList::
jProposal ()
{
  return this->jProposal_;
}

// Begin epilogue.
//
//
// End epilogue.

#endif // KMODEL2_IXX
