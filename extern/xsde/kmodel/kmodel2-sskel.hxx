// Copyright (C) 2005-2009 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

#ifndef KMODEL2_SSKEL_HXX
#define KMODEL2_SSKEL_HXX

// Begin prologue.
//
//
// End prologue.

#include <xsde/cxx/version.hxx>

#if (XSDE_INT_VERSION != 3010000L)
#error XSD/e runtime version mismatch
#endif

#include <xsde/cxx/config.hxx>

#ifndef XSDE_STL
#error the generated code uses STL while the XSD/e runtime does not (reconfigure the runtime or add --no-stl)
#endif

#ifndef XSDE_IOSTREAM
#error the generated code uses iostream while the XSD/e runtime does not (reconfigure the runtime or add --no-iostream)
#endif

#ifndef XSDE_EXCEPTIONS
#error the generated code uses exceptions while the XSD/e runtime does not (reconfigure the runtime or add --no-exceptions)
#endif

#ifdef XSDE_LONGLONG
#error the XSD/e runtime uses long long while the generated code does not (reconfigure the runtime or remove --no-long-long)
#endif

#ifndef XSDE_SERIALIZER_VALIDATION
#error the generated code uses validation while the XSD/e runtime does not (reconfigure the runtime or add --suppress-validation)
#endif

#ifdef XSDE_POLYMORPHIC
#error the generated code expects XSD/e runtime without polymorphism support (reconfigure the runtime or add --generate-polymorphic/--runtime-polymorphic)
#endif

#ifndef XSDE_REUSE_STYLE_TIEIN
#error the generated code uses the tiein reuse style while the XSD/e runtime does not (reconfigure the runtime or add --reuse-style-mixin or --reuse-style-none)
#endif

#include <xsde/cxx/pre.hxx>

// Forward declarations
//
class LabelType_sskel;
class Property_sskel;
class PropertyListType_sskel;
class jProposalType_sskel;
class Image_sskel;
class ImageListType_sskel;
class jGroupType_sskel;
class CategoryType_sskel;
class SourceRef_sskel;
class SourceList_sskel;
class jProposalRef_sskel;
class jProposal_sskel;
class jProblemList_sskel;
class kmx_sskel;
class Solution_sskel;
class jProblem_sskel;
class References_sskel;
class Content_sskel;
class RefSourceList_sskel;
class RefProposalTypeList_sskel;
class Source_sskel;
class jProposalList_sskel;

#include <xsde/config.h>

#include <string>

#include <xsde/cxx/serializer/xml-schema.hxx>

#include <xsde/cxx/serializer/exceptions.hxx>

#include <xsde/cxx/serializer/validating/serializer.hxx>
#include <xsde/cxx/serializer/validating/xml-schema-sskel.hxx>
#include <xsde/cxx/serializer/validating/xml-schema-simpl.hxx>

#include <xsde/cxx/serializer/genx/document.hxx>

#include "kmodel2.hxx"

namespace xml_schema
{
  // Built-in XML Schema types mapping.
  //
  using ::xsde::cxx::string_sequence;
  using ::xsde::cxx::qname;
  using ::xsde::cxx::buffer;
  using ::xsde::cxx::time_zone;
  using ::xsde::cxx::gday;
  using ::xsde::cxx::gmonth;
  using ::xsde::cxx::gyear;
  using ::xsde::cxx::gmonth_day;
  using ::xsde::cxx::gyear_month;
  using ::xsde::cxx::date;
  using ::xsde::cxx::time;
  using ::xsde::cxx::date_time;
  using ::xsde::cxx::duration;

  // Base serializer skeletons.
  //
  using ::xsde::cxx::serializer::serializer_base;
  typedef ::xsde::cxx::serializer::validating::empty_content serializer_empty_content;
  typedef ::xsde::cxx::serializer::validating::simple_content serializer_simple_content;
  typedef ::xsde::cxx::serializer::validating::complex_content serializer_complex_content;

  // Serializer skeletons and implementations for the
  // XML Schema built-in types.
  //
  typedef ::xsde::cxx::serializer::validating::any_type_sskel any_type_sskel;
  typedef ::xsde::cxx::serializer::validating::any_type_simpl any_type_simpl;

  typedef ::xsde::cxx::serializer::validating::any_simple_type_sskel any_simple_type_sskel;
  typedef ::xsde::cxx::serializer::validating::any_simple_type_simpl any_simple_type_simpl;

  typedef ::xsde::cxx::serializer::validating::byte_sskel byte_sskel;
  typedef ::xsde::cxx::serializer::validating::byte_simpl byte_simpl;

  typedef ::xsde::cxx::serializer::validating::unsigned_byte_sskel unsigned_byte_sskel;
  typedef ::xsde::cxx::serializer::validating::unsigned_byte_simpl unsigned_byte_simpl;

  typedef ::xsde::cxx::serializer::validating::short_sskel short_sskel;
  typedef ::xsde::cxx::serializer::validating::short_simpl short_simpl;

  typedef ::xsde::cxx::serializer::validating::unsigned_short_sskel unsigned_short_sskel;
  typedef ::xsde::cxx::serializer::validating::unsigned_short_simpl unsigned_short_simpl;

  typedef ::xsde::cxx::serializer::validating::int_sskel int_sskel;
  typedef ::xsde::cxx::serializer::validating::int_simpl int_simpl;

  typedef ::xsde::cxx::serializer::validating::unsigned_int_sskel unsigned_int_sskel;
  typedef ::xsde::cxx::serializer::validating::unsigned_int_simpl unsigned_int_simpl;

  typedef ::xsde::cxx::serializer::validating::long_sskel long_sskel;
  typedef ::xsde::cxx::serializer::validating::long_simpl long_simpl;

  typedef ::xsde::cxx::serializer::validating::unsigned_long_sskel unsigned_long_sskel;
  typedef ::xsde::cxx::serializer::validating::unsigned_long_simpl unsigned_long_simpl;

  typedef ::xsde::cxx::serializer::validating::integer_sskel integer_sskel;
  typedef ::xsde::cxx::serializer::validating::integer_simpl integer_simpl;

  typedef ::xsde::cxx::serializer::validating::non_positive_integer_sskel non_positive_integer_sskel;
  typedef ::xsde::cxx::serializer::validating::non_positive_integer_simpl non_positive_integer_simpl;

  typedef ::xsde::cxx::serializer::validating::non_negative_integer_sskel non_negative_integer_sskel;
  typedef ::xsde::cxx::serializer::validating::non_negative_integer_simpl non_negative_integer_simpl;

  typedef ::xsde::cxx::serializer::validating::positive_integer_sskel positive_integer_sskel;
  typedef ::xsde::cxx::serializer::validating::positive_integer_simpl positive_integer_simpl;

  typedef ::xsde::cxx::serializer::validating::negative_integer_sskel negative_integer_sskel;
  typedef ::xsde::cxx::serializer::validating::negative_integer_simpl negative_integer_simpl;

  typedef ::xsde::cxx::serializer::validating::boolean_sskel boolean_sskel;
  typedef ::xsde::cxx::serializer::validating::boolean_simpl boolean_simpl;

  typedef ::xsde::cxx::serializer::validating::float_sskel float_sskel;
  typedef ::xsde::cxx::serializer::validating::float_simpl float_simpl;

  typedef ::xsde::cxx::serializer::validating::double_sskel double_sskel;
  typedef ::xsde::cxx::serializer::validating::double_simpl double_simpl;

  typedef ::xsde::cxx::serializer::validating::decimal_sskel decimal_sskel;
  typedef ::xsde::cxx::serializer::validating::decimal_simpl decimal_simpl;

  typedef ::xsde::cxx::serializer::validating::string_sskel string_sskel;
  typedef ::xsde::cxx::serializer::validating::string_simpl string_simpl;

  typedef ::xsde::cxx::serializer::validating::normalized_string_sskel normalized_string_sskel;
  typedef ::xsde::cxx::serializer::validating::normalized_string_simpl normalized_string_simpl;

  typedef ::xsde::cxx::serializer::validating::token_sskel token_sskel;
  typedef ::xsde::cxx::serializer::validating::token_simpl token_simpl;

  typedef ::xsde::cxx::serializer::validating::name_sskel name_sskel;
  typedef ::xsde::cxx::serializer::validating::name_simpl name_simpl;

  typedef ::xsde::cxx::serializer::validating::nmtoken_sskel nmtoken_sskel;
  typedef ::xsde::cxx::serializer::validating::nmtoken_simpl nmtoken_simpl;

  typedef ::xsde::cxx::serializer::validating::nmtokens_sskel nmtokens_sskel;
  typedef ::xsde::cxx::serializer::validating::nmtokens_simpl nmtokens_simpl;

  typedef ::xsde::cxx::serializer::validating::ncname_sskel ncname_sskel;
  typedef ::xsde::cxx::serializer::validating::ncname_simpl ncname_simpl;

  typedef ::xsde::cxx::serializer::validating::language_sskel language_sskel;
  typedef ::xsde::cxx::serializer::validating::language_simpl language_simpl;

  typedef ::xsde::cxx::serializer::validating::id_sskel id_sskel;
  typedef ::xsde::cxx::serializer::validating::id_simpl id_simpl;

  typedef ::xsde::cxx::serializer::validating::idref_sskel idref_sskel;
  typedef ::xsde::cxx::serializer::validating::idref_simpl idref_simpl;

  typedef ::xsde::cxx::serializer::validating::idrefs_sskel idrefs_sskel;
  typedef ::xsde::cxx::serializer::validating::idrefs_simpl idrefs_simpl;

  typedef ::xsde::cxx::serializer::validating::uri_sskel uri_sskel;
  typedef ::xsde::cxx::serializer::validating::uri_simpl uri_simpl;

  typedef ::xsde::cxx::serializer::validating::qname_sskel qname_sskel;
  typedef ::xsde::cxx::serializer::validating::qname_simpl qname_simpl;

  typedef ::xsde::cxx::serializer::validating::base64_binary_sskel base64_binary_sskel;
  typedef ::xsde::cxx::serializer::validating::base64_binary_simpl base64_binary_simpl;

  typedef ::xsde::cxx::serializer::validating::hex_binary_sskel hex_binary_sskel;
  typedef ::xsde::cxx::serializer::validating::hex_binary_simpl hex_binary_simpl;

  typedef ::xsde::cxx::serializer::validating::date_sskel date_sskel;
  typedef ::xsde::cxx::serializer::validating::date_simpl date_simpl;

  typedef ::xsde::cxx::serializer::validating::date_time_sskel date_time_sskel;
  typedef ::xsde::cxx::serializer::validating::date_time_simpl date_time_simpl;

  typedef ::xsde::cxx::serializer::validating::duration_sskel duration_sskel;
  typedef ::xsde::cxx::serializer::validating::duration_simpl duration_simpl;

  typedef ::xsde::cxx::serializer::validating::gday_sskel gday_sskel;
  typedef ::xsde::cxx::serializer::validating::gday_simpl gday_simpl;

  typedef ::xsde::cxx::serializer::validating::gmonth_sskel gmonth_sskel;
  typedef ::xsde::cxx::serializer::validating::gmonth_simpl gmonth_simpl;

  typedef ::xsde::cxx::serializer::validating::gmonth_day_sskel gmonth_day_sskel;
  typedef ::xsde::cxx::serializer::validating::gmonth_day_simpl gmonth_day_simpl;

  typedef ::xsde::cxx::serializer::validating::gyear_sskel gyear_sskel;
  typedef ::xsde::cxx::serializer::validating::gyear_simpl gyear_simpl;

  typedef ::xsde::cxx::serializer::validating::gyear_month_sskel gyear_month_sskel;
  typedef ::xsde::cxx::serializer::validating::gyear_month_simpl gyear_month_simpl;

  typedef ::xsde::cxx::serializer::validating::time_sskel time_sskel;
  typedef ::xsde::cxx::serializer::validating::time_simpl time_simpl;

  // Error codes.
  //
  typedef xsde::cxx::serializer::genx::xml_error serializer_xml_error;
  typedef xsde::cxx::schema_error serializer_schema_error;

  // Exceptions.
  //
  typedef xsde::cxx::serializer::exception serializer_exception;
  typedef xsde::cxx::serializer::xml serializer_xml;
  typedef xsde::cxx::serializer::schema serializer_schema;

  // Document serializer.
  //
  using xsde::cxx::serializer::genx::writer;
  using xsde::cxx::serializer::genx::document_simpl;

  // Serializer context.
  //
  typedef xsde::cxx::serializer::context serializer_context;
}

class LabelType_sskel: public ::xml_schema::string_sskel
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::LabelType&) = 0;

  // Attributes.
  //
  virtual unsigned int
  id () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::unsigned_int_sskel& /* id */);

  // Individual attribute serializers.
  //
  void
  id_serializer (::xml_schema::unsigned_int_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  LabelType_sskel (::xml_schema::string_sskel* tiein);

  // Implementation.
  //
  public:
  virtual void
  pre (const ::std::string&);

  virtual void
  _serialize_attributes ();

  protected:
  LabelType_sskel* LabelType_impl_;
  LabelType_sskel (LabelType_sskel*, void*);

  protected:
  ::xml_schema::unsigned_int_sskel* id_serializer_;
};

class Property_sskel: public ::xml_schema::string_sskel
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::Property&) = 0;

  // Attributes.
  //
  virtual ::std::string
  key () = 0;

  virtual ::std::string
  value () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::ncname_sskel& /* key */,
               ::xml_schema::string_sskel& /* value */);

  // Individual attribute serializers.
  //
  void
  key_serializer (::xml_schema::ncname_sskel&);

  void
  value_serializer (::xml_schema::string_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  Property_sskel (::xml_schema::string_sskel* tiein);

  // Implementation.
  //
  public:
  virtual void
  pre (const ::std::string&);

  virtual void
  _serialize_attributes ();

  protected:
  Property_sskel* Property_impl_;
  Property_sskel (Property_sskel*, void*);

  protected:
  ::xml_schema::ncname_sskel* key_serializer_;
  ::xml_schema::string_sskel* value_serializer_;
};

class PropertyListType_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::PropertyListType&) = 0;

  // Elements.
  //
  virtual bool
  Property_next ();

  virtual const ::Property&
  Property () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::Property_sskel& /* Property */);

  // Individual element serializers.
  //
  void
  Property_serializer (::Property_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  PropertyListType_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_content ();

  protected:
  PropertyListType_sskel* PropertyListType_impl_;
  PropertyListType_sskel (PropertyListType_sskel*, void*);

  protected:
  ::Property_sskel* Property_serializer_;
};

class jProposalType_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::jProposalType&) = 0;

  // Attributes.
  //
  virtual bool
  mc () = 0;

  virtual ::std::string
  qname () = 0;

  // Elements.
  //
  virtual bool
  Label_next ();

  virtual const ::LabelType&
  Label () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::boolean_sskel& /* mc */,
               ::xml_schema::id_sskel& /* qname */,
               ::LabelType_sskel& /* Label */);

  // Individual attribute serializers.
  //
  void
  mc_serializer (::xml_schema::boolean_sskel&);

  void
  qname_serializer (::xml_schema::id_sskel&);

  // Individual element serializers.
  //
  void
  Label_serializer (::LabelType_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  jProposalType_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_attributes ();

  virtual void
  _serialize_content ();

  protected:
  jProposalType_sskel* jProposalType_impl_;
  jProposalType_sskel (jProposalType_sskel*, void*);

  protected:
  ::xml_schema::boolean_sskel* mc_serializer_;
  ::xml_schema::id_sskel* qname_serializer_;
  ::LabelType_sskel* Label_serializer_;
};

class Image_sskel: public ::xml_schema::string_sskel
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::Image&) = 0;

  // Attributes.
  //
  virtual unsigned int
  id () = 0;

  virtual ::std::string
  uri () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::unsigned_int_sskel& /* id */,
               ::xml_schema::uri_sskel& /* uri */);

  // Individual attribute serializers.
  //
  void
  id_serializer (::xml_schema::unsigned_int_sskel&);

  void
  uri_serializer (::xml_schema::uri_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  Image_sskel (::xml_schema::string_sskel* tiein);

  // Implementation.
  //
  public:
  virtual void
  pre (const ::std::string&);

  virtual void
  _serialize_attributes ();

  protected:
  Image_sskel* Image_impl_;
  Image_sskel (Image_sskel*, void*);

  protected:
  ::xml_schema::unsigned_int_sskel* id_serializer_;
  ::xml_schema::uri_sskel* uri_serializer_;
};

class ImageListType_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::ImageListType&) = 0;

  // Elements.
  //
  virtual bool
  Image_next ();

  virtual const ::Image&
  Image () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::Image_sskel& /* Image */);

  // Individual element serializers.
  //
  void
  Image_serializer (::Image_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  ImageListType_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_content ();

  protected:
  ImageListType_sskel* ImageListType_impl_;
  ImageListType_sskel (ImageListType_sskel*, void*);

  protected:
  ::Image_sskel* Image_serializer_;
};

class jGroupType_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::jGroupType&) = 0;

  // Attributes.
  //
  virtual unsigned int
  id () = 0;

  virtual ::std::string
  name () = 0;

  // Elements.
  //
  virtual const ::PropertyListType&
  PropertyList () = 0;

  virtual bool
  SourceList_present ();

  virtual const ::SourceList&
  SourceList () = 0;

  virtual ::std::string
  Description () = 0;

  virtual const ::ImageListType&
  ImageList () = 0;

  virtual ::std::string
  Text () = 0;

  virtual ::std::string
  Hint () = 0;

  virtual const ::jProposal&
  jProposal () = 0;

  virtual const ::jProblemList&
  jProblemList () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::unsigned_int_sskel& /* id */,
               ::xml_schema::string_sskel& /* name */,
               ::PropertyListType_sskel& /* PropertyList */,
               ::SourceList_sskel& /* SourceList */,
               ::xml_schema::string_sskel& /* Description */,
               ::ImageListType_sskel& /* ImageList */,
               ::xml_schema::string_sskel& /* Text */,
               ::xml_schema::string_sskel& /* Hint */,
               ::jProposal_sskel& /* jProposal */,
               ::jProblemList_sskel& /* jProblemList */);

  // Individual attribute serializers.
  //
  void
  id_serializer (::xml_schema::unsigned_int_sskel&);

  void
  name_serializer (::xml_schema::string_sskel&);

  // Individual element serializers.
  //
  void
  PropertyList_serializer (::PropertyListType_sskel&);

  void
  SourceList_serializer (::SourceList_sskel&);

  void
  Description_serializer (::xml_schema::string_sskel&);

  void
  ImageList_serializer (::ImageListType_sskel&);

  void
  Text_serializer (::xml_schema::string_sskel&);

  void
  Hint_serializer (::xml_schema::string_sskel&);

  void
  jProposal_serializer (::jProposal_sskel&);

  void
  jProblemList_serializer (::jProblemList_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  jGroupType_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_attributes ();

  virtual void
  _serialize_content ();

  protected:
  jGroupType_sskel* jGroupType_impl_;
  jGroupType_sskel (jGroupType_sskel*, void*);

  protected:
  ::xml_schema::unsigned_int_sskel* id_serializer_;
  ::xml_schema::string_sskel* name_serializer_;
  ::PropertyListType_sskel* PropertyList_serializer_;
  ::SourceList_sskel* SourceList_serializer_;
  ::xml_schema::string_sskel* Description_serializer_;
  ::ImageListType_sskel* ImageList_serializer_;
  ::xml_schema::string_sskel* Text_serializer_;
  ::xml_schema::string_sskel* Hint_serializer_;
  ::jProposal_sskel* jProposal_serializer_;
  ::jProblemList_sskel* jProblemList_serializer_;
};

class CategoryType_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::CategoryType&) = 0;

  // Attributes.
  //
  virtual unsigned long
  id () = 0;

  virtual ::std::string
  name () = 0;

  // Elements.
  //
  virtual const ::PropertyListType&
  PropertyList () = 0;

  virtual ::std::string
  Description () = 0;

  virtual bool
  Category_next ();

  virtual const ::CategoryType&
  Category () = 0;

  virtual bool
  jGroup_next ();

  virtual const ::jGroupType&
  jGroup () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::non_negative_integer_sskel& /* id */,
               ::xml_schema::string_sskel& /* name */,
               ::PropertyListType_sskel& /* PropertyList */,
               ::xml_schema::string_sskel& /* Description */,
               ::CategoryType_sskel& /* Category */,
               ::jGroupType_sskel& /* jGroup */);

  // Individual attribute serializers.
  //
  void
  id_serializer (::xml_schema::non_negative_integer_sskel&);

  void
  name_serializer (::xml_schema::string_sskel&);

  // Individual element serializers.
  //
  void
  PropertyList_serializer (::PropertyListType_sskel&);

  void
  Description_serializer (::xml_schema::string_sskel&);

  void
  Category_serializer (::CategoryType_sskel&);

  void
  jGroup_serializer (::jGroupType_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  CategoryType_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_attributes ();

  virtual void
  _serialize_content ();

  protected:
  CategoryType_sskel* CategoryType_impl_;
  CategoryType_sskel (CategoryType_sskel*, void*);

  protected:
  ::xml_schema::non_negative_integer_sskel* id_serializer_;
  ::xml_schema::string_sskel* name_serializer_;
  ::PropertyListType_sskel* PropertyList_serializer_;
  ::xml_schema::string_sskel* Description_serializer_;
  ::CategoryType_sskel* Category_serializer_;
  ::jGroupType_sskel* jGroup_serializer_;
};

class SourceRef_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::SourceRef&) = 0;

  // Attributes.
  //
  virtual bool
  qnameref_present ();

  virtual ::std::string
  qnameref () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::idref_sskel& /* qnameref */);

  // Individual attribute serializers.
  //
  void
  qnameref_serializer (::xml_schema::idref_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  SourceRef_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_attributes ();

  protected:
  SourceRef_sskel* SourceRef_impl_;
  SourceRef_sskel (SourceRef_sskel*, void*);

  protected:
  ::xml_schema::idref_sskel* qnameref_serializer_;
};

class SourceList_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::SourceList&) = 0;

  // Elements.
  //
  virtual bool
  SourceRef_next () = 0;

  virtual const ::SourceRef&
  SourceRef () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::SourceRef_sskel& /* SourceRef */);

  // Individual element serializers.
  //
  void
  SourceRef_serializer (::SourceRef_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  SourceList_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_content ();

  protected:
  SourceList_sskel* SourceList_impl_;
  SourceList_sskel (SourceList_sskel*, void*);

  protected:
  ::SourceRef_sskel* SourceRef_serializer_;
};

class jProposalRef_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::jProposalRef&) = 0;

  // Attributes.
  //
  virtual ::std::string
  qnameref () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::idref_sskel& /* qnameref */);

  // Individual attribute serializers.
  //
  void
  qnameref_serializer (::xml_schema::idref_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  jProposalRef_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_attributes ();

  protected:
  jProposalRef_sskel* jProposalRef_impl_;
  jProposalRef_sskel (jProposalRef_sskel*, void*);

  protected:
  ::xml_schema::idref_sskel* qnameref_serializer_;
};

class jProposal_sskel: public ::jProposalType_sskel
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::jProposal&) = 0;

  // Elements.
  //
  virtual bool
  jProposalRef_present ();

  virtual const ::jProposalRef&
  jProposalRef () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::boolean_sskel& /* mc */,
               ::xml_schema::id_sskel& /* qname */,
               ::LabelType_sskel& /* Label */,
               ::jProposalRef_sskel& /* jProposalRef */);

  // Individual element serializers.
  //
  void
  jProposalRef_serializer (::jProposalRef_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  jProposal_sskel (::jProposalType_sskel* tiein);

  // Implementation.
  //
  public:
  virtual void
  pre (const ::jProposalType&);

  virtual bool
  mc ();

  virtual ::std::string
  qname ();

  virtual const ::LabelType&
  Label ();

  virtual void
  _serialize_content ();

  protected:
  jProposal_sskel* jProposal_impl_;
  jProposal_sskel (jProposal_sskel*, void*);

  protected:
  ::jProposalRef_sskel* jProposalRef_serializer_;
};

class jProblemList_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::jProblemList&) = 0;

  // Elements.
  //
  virtual bool
  jProblem_next () = 0;

  virtual const ::jProblem&
  jProblem () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::jProblem_sskel& /* jProblem */);

  // Individual element serializers.
  //
  void
  jProblem_serializer (::jProblem_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  jProblemList_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_content ();

  protected:
  jProblemList_sskel* jProblemList_impl_;
  jProblemList_sskel (jProblemList_sskel*, void*);

  protected:
  ::jProblem_sskel* jProblem_serializer_;
};

class kmx_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::kmx&) = 0;

  // Attributes.
  //
  virtual ::std::string
  name () = 0;

  virtual ::std::string
  version () = 0;

  // Elements.
  //
  virtual const ::References&
  References () = 0;

  virtual const ::Content&
  Content () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::string_sskel& /* name */,
               ::xml_schema::string_sskel& /* version */,
               ::References_sskel& /* References */,
               ::Content_sskel& /* Content */);

  // Individual attribute serializers.
  //
  void
  name_serializer (::xml_schema::string_sskel&);

  void
  version_serializer (::xml_schema::string_sskel&);

  // Individual element serializers.
  //
  void
  References_serializer (::References_sskel&);

  void
  Content_serializer (::Content_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  kmx_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_attributes ();

  virtual void
  _serialize_content ();

  protected:
  kmx_sskel* kmx_impl_;
  kmx_sskel (kmx_sskel*, void*);

  protected:
  ::xml_schema::string_sskel* name_serializer_;
  ::xml_schema::string_sskel* version_serializer_;
  ::References_sskel* References_serializer_;
  ::Content_sskel* Content_serializer_;
};

class Solution_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::Solution&) = 0;

  // Attributes.
  //
  virtual bool
  idref_present ();

  virtual unsigned int
  idref () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::unsigned_int_sskel& /* idref */);

  // Individual attribute serializers.
  //
  void
  idref_serializer (::xml_schema::unsigned_int_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  Solution_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_attributes ();

  protected:
  Solution_sskel* Solution_impl_;
  Solution_sskel (Solution_sskel*, void*);

  protected:
  ::xml_schema::unsigned_int_sskel* idref_serializer_;
};

class jProblem_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::jProblem&) = 0;

  // Attributes.
  //
  virtual unsigned int
  id () = 0;

  // Elements.
  //
  virtual const ::PropertyListType&
  PropertyList () = 0;

  virtual ::std::string
  Text () = 0;

  virtual bool
  Solution_next () = 0;

  virtual const ::Solution&
  Solution () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::unsigned_int_sskel& /* id */,
               ::PropertyListType_sskel& /* PropertyList */,
               ::xml_schema::string_sskel& /* Text */,
               ::Solution_sskel& /* Solution */);

  // Individual attribute serializers.
  //
  void
  id_serializer (::xml_schema::unsigned_int_sskel&);

  // Individual element serializers.
  //
  void
  PropertyList_serializer (::PropertyListType_sskel&);

  void
  Text_serializer (::xml_schema::string_sskel&);

  void
  Solution_serializer (::Solution_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  jProblem_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_attributes ();

  virtual void
  _serialize_content ();

  protected:
  jProblem_sskel* jProblem_impl_;
  jProblem_sskel (jProblem_sskel*, void*);

  protected:
  ::xml_schema::unsigned_int_sskel* id_serializer_;
  ::PropertyListType_sskel* PropertyList_serializer_;
  ::xml_schema::string_sskel* Text_serializer_;
  ::Solution_sskel* Solution_serializer_;
};

class References_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::References&) = 0;

  // Elements.
  //
  virtual const ::RefSourceList&
  RefSourceList () = 0;

  virtual const ::RefProposalTypeList&
  RefProposalTypeList () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::RefSourceList_sskel& /* RefSourceList */,
               ::RefProposalTypeList_sskel& /* RefProposalTypeList */);

  // Individual element serializers.
  //
  void
  RefSourceList_serializer (::RefSourceList_sskel&);

  void
  RefProposalTypeList_serializer (::RefProposalTypeList_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  References_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_content ();

  protected:
  References_sskel* References_impl_;
  References_sskel (References_sskel*, void*);

  protected:
  ::RefSourceList_sskel* RefSourceList_serializer_;
  ::RefProposalTypeList_sskel* RefProposalTypeList_serializer_;
};

class Content_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::Content&) = 0;

  // Elements.
  //
  virtual bool
  Category_next () = 0;

  virtual const ::CategoryType&
  Category () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::CategoryType_sskel& /* Category */);

  // Individual element serializers.
  //
  void
  Category_serializer (::CategoryType_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  Content_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_content ();

  protected:
  Content_sskel* Content_impl_;
  Content_sskel (Content_sskel*, void*);

  protected:
  ::CategoryType_sskel* Category_serializer_;
};

class RefSourceList_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::RefSourceList&) = 0;

  // Elements.
  //
  virtual bool
  Source_next ();

  virtual const ::Source&
  Source () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::Source_sskel& /* Source */);

  // Individual element serializers.
  //
  void
  Source_serializer (::Source_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  RefSourceList_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_content ();

  protected:
  RefSourceList_sskel* RefSourceList_impl_;
  RefSourceList_sskel (RefSourceList_sskel*, void*);

  protected:
  ::Source_sskel* Source_serializer_;
};

class RefProposalTypeList_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::RefProposalTypeList&) = 0;

  // Elements.
  //
  virtual const ::jProposalList&
  jProposalList () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::jProposalList_sskel& /* jProposalList */);

  // Individual element serializers.
  //
  void
  jProposalList_serializer (::jProposalList_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  RefProposalTypeList_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_content ();

  protected:
  RefProposalTypeList_sskel* RefProposalTypeList_impl_;
  RefProposalTypeList_sskel (RefProposalTypeList_sskel*, void*);

  protected:
  ::jProposalList_sskel* jProposalList_serializer_;
};

class Source_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::Source&) = 0;

  // Attributes.
  //
  virtual ::std::string
  qname () = 0;

  virtual ::std::string
  uri () = 0;

  // Elements.
  //
  virtual const ::PropertyListType&
  PropertyList () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::xml_schema::id_sskel& /* qname */,
               ::xml_schema::uri_sskel& /* uri */,
               ::PropertyListType_sskel& /* PropertyList */);

  // Individual attribute serializers.
  //
  void
  qname_serializer (::xml_schema::id_sskel&);

  void
  uri_serializer (::xml_schema::uri_sskel&);

  // Individual element serializers.
  //
  void
  PropertyList_serializer (::PropertyListType_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  Source_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_attributes ();

  virtual void
  _serialize_content ();

  protected:
  Source_sskel* Source_impl_;
  Source_sskel (Source_sskel*, void*);

  protected:
  ::xml_schema::id_sskel* qname_serializer_;
  ::xml_schema::uri_sskel* uri_serializer_;
  ::PropertyListType_sskel* PropertyList_serializer_;
};

class jProposalList_sskel: public ::xsde::cxx::serializer::validating::complex_content
{
  public:
  // Serializer callbacks. Override them in your implementation.
  //

  virtual void
  pre (const ::jProposalList&) = 0;

  // Elements.
  //
  virtual bool
  jProposal_next ();

  virtual const ::jProposalType&
  jProposal () = 0;

  // virtual void
  // post ();

  // Serializer construction API.
  //
  void
  serializers (::jProposalType_sskel& /* jProposal */);

  // Individual element serializers.
  //
  void
  jProposal_serializer (::jProposalType_sskel&);

  virtual void
  _reset ();

  // Constructor.
  //
  jProposalList_sskel ();

  // Implementation.
  //
  public:
  virtual void
  _serialize_content ();

  protected:
  jProposalList_sskel* jProposalList_impl_;
  jProposalList_sskel (jProposalList_sskel*, void*);

  protected:
  ::jProposalType_sskel* jProposal_serializer_;
};

#include "kmodel2-sskel.ixx"

#include <xsde/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

#endif // KMODEL2_SSKEL_HXX
