// Copyright (C) 2005-2009 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

// Begin prologue.
//
//
// End prologue.

#include "kmodel2-simpl.hxx"

// LabelType_simpl
//

LabelType_simpl::
LabelType_simpl ()

: LabelType_sskel (&base_impl_)
{
}

void LabelType_simpl::
pre (const ::LabelType& x)
{
  this->base_impl_.pre (x);
  this->LabelType_simpl_state_.LabelType_ = &x;
}

unsigned int LabelType_simpl::
id ()
{
  return this->LabelType_simpl_state_.LabelType_->id ();
}

// Property_simpl
//

Property_simpl::
Property_simpl ()

: Property_sskel (&base_impl_)
{
}

void Property_simpl::
pre (const ::Property& x)
{
  this->base_impl_.pre (x);
  this->Property_simpl_state_.Property_ = &x;
}

::std::string Property_simpl::
key ()
{
  return this->Property_simpl_state_.Property_->key ();
}

::std::string Property_simpl::
value ()
{
  return this->Property_simpl_state_.Property_->value ();
}

// PropertyListType_simpl
//

void PropertyListType_simpl::
pre (const ::PropertyListType& x)
{
  this->PropertyListType_simpl_state_.PropertyListType_ = &x;
  this->PropertyListType_simpl_state_.Property_ = 
  this->PropertyListType_simpl_state_.PropertyListType_->Property ().begin ();
  this->PropertyListType_simpl_state_.Property_end_ = 
  this->PropertyListType_simpl_state_.PropertyListType_->Property ().end ();
}

bool PropertyListType_simpl::
Property_next ()
{
  return this->PropertyListType_simpl_state_.Property_ != 
  this->PropertyListType_simpl_state_.Property_end_;
}

const ::Property& PropertyListType_simpl::
Property ()
{
  return *this->PropertyListType_simpl_state_.Property_++;
}

// jProposalType_simpl
//

void jProposalType_simpl::
pre (const ::jProposalType& x)
{
  this->jProposalType_simpl_state_.jProposalType_ = &x;
  this->jProposalType_simpl_state_.Label_ = 
  this->jProposalType_simpl_state_.jProposalType_->Label ().begin ();
  this->jProposalType_simpl_state_.Label_end_ = 
  this->jProposalType_simpl_state_.jProposalType_->Label ().end ();
}

bool jProposalType_simpl::
mc ()
{
  return this->jProposalType_simpl_state_.jProposalType_->mc ();
}

::std::string jProposalType_simpl::
qname ()
{
  return this->jProposalType_simpl_state_.jProposalType_->qname ();
}

bool jProposalType_simpl::
Label_next ()
{
  return this->jProposalType_simpl_state_.Label_ != 
  this->jProposalType_simpl_state_.Label_end_;
}

const ::LabelType& jProposalType_simpl::
Label ()
{
  return *this->jProposalType_simpl_state_.Label_++;
}

// Image_simpl
//

Image_simpl::
Image_simpl ()

: Image_sskel (&base_impl_)
{
}

void Image_simpl::
pre (const ::Image& x)
{
  this->base_impl_.pre (x);
  this->Image_simpl_state_.Image_ = &x;
}

unsigned int Image_simpl::
id ()
{
  return this->Image_simpl_state_.Image_->id ();
}

::std::string Image_simpl::
uri ()
{
  return this->Image_simpl_state_.Image_->uri ();
}

// ImageListType_simpl
//

void ImageListType_simpl::
pre (const ::ImageListType& x)
{
  this->ImageListType_simpl_state_.ImageListType_ = &x;
  this->ImageListType_simpl_state_.Image_ = 
  this->ImageListType_simpl_state_.ImageListType_->Image ().begin ();
  this->ImageListType_simpl_state_.Image_end_ = 
  this->ImageListType_simpl_state_.ImageListType_->Image ().end ();
}

bool ImageListType_simpl::
Image_next ()
{
  return this->ImageListType_simpl_state_.Image_ != 
  this->ImageListType_simpl_state_.Image_end_;
}

const ::Image& ImageListType_simpl::
Image ()
{
  return *this->ImageListType_simpl_state_.Image_++;
}

// jGroupType_simpl
//

void jGroupType_simpl::
pre (const ::jGroupType& x)
{
  this->jGroupType_simpl_state_.jGroupType_ = &x;
}

unsigned int jGroupType_simpl::
id ()
{
  return this->jGroupType_simpl_state_.jGroupType_->id ();
}

::std::string jGroupType_simpl::
name ()
{
  return this->jGroupType_simpl_state_.jGroupType_->name ();
}

const ::PropertyListType& jGroupType_simpl::
PropertyList ()
{
  return this->jGroupType_simpl_state_.jGroupType_->PropertyList ();
}

bool jGroupType_simpl::
SourceList_present ()
{
  return this->jGroupType_simpl_state_.jGroupType_->SourceList_present ();
}

const ::SourceList& jGroupType_simpl::
SourceList ()
{
  return this->jGroupType_simpl_state_.jGroupType_->SourceList ();
}

::std::string jGroupType_simpl::
Description ()
{
  return this->jGroupType_simpl_state_.jGroupType_->Description ();
}

const ::ImageListType& jGroupType_simpl::
ImageList ()
{
  return this->jGroupType_simpl_state_.jGroupType_->ImageList ();
}

::std::string jGroupType_simpl::
Text ()
{
  return this->jGroupType_simpl_state_.jGroupType_->Text ();
}

::std::string jGroupType_simpl::
Hint ()
{
  return this->jGroupType_simpl_state_.jGroupType_->Hint ();
}

const ::jProposal& jGroupType_simpl::
jProposal ()
{
  return this->jGroupType_simpl_state_.jGroupType_->jProposal ();
}

const ::jProblemList& jGroupType_simpl::
jProblemList ()
{
  return this->jGroupType_simpl_state_.jGroupType_->jProblemList ();
}

// CategoryType_simpl
//

CategoryType_simpl::
CategoryType_simpl ()

: CategoryType_simpl_state_ (sizeof (CategoryType_simpl_state ), &CategoryType_simpl_state_first_)
{
}

void CategoryType_simpl::
pre (const ::CategoryType& x)
{
  this->CategoryType_simpl_state_.push ();
  static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->CategoryType_ = &x;
  static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->Category_ = 
  static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->CategoryType_->Category ().begin ();
  static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->Category_end_ = 
  static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->CategoryType_->Category ().end ();
  static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->jGroup_ = 
  static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->CategoryType_->jGroup ().begin ();
  static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->jGroup_end_ = 
  static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->CategoryType_->jGroup ().end ();
}

unsigned long CategoryType_simpl::
id ()
{
  return static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->CategoryType_->id ();
}

::std::string CategoryType_simpl::
name ()
{
  return static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->CategoryType_->name ();
}

const ::PropertyListType& CategoryType_simpl::
PropertyList ()
{
  return static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->CategoryType_->PropertyList ();
}

::std::string CategoryType_simpl::
Description ()
{
  return static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->CategoryType_->Description ();
}

bool CategoryType_simpl::
Category_next ()
{
  return static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->Category_ != 
  static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->Category_end_;
}

const ::CategoryType& CategoryType_simpl::
Category ()
{
  return *static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->Category_++;
}

bool CategoryType_simpl::
jGroup_next ()
{
  return static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->jGroup_ != 
  static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->jGroup_end_;
}

const ::jGroupType& CategoryType_simpl::
jGroup ()
{
  return *static_cast< CategoryType_simpl_state* > (this->CategoryType_simpl_state_.top ())->jGroup_++;
}

void CategoryType_simpl::
post ()
{
  this->CategoryType_simpl_state_.pop ();
}

void CategoryType_simpl::
_reset ()
{
  CategoryType_sskel::_reset ();
  for (; !this->CategoryType_simpl_state_.empty (); this->CategoryType_simpl_state_.pop ()) ;
}

// SourceRef_simpl
//

void SourceRef_simpl::
pre (const ::SourceRef& x)
{
  this->SourceRef_simpl_state_.SourceRef_ = &x;
}

bool SourceRef_simpl::
qnameref_present ()
{
  return this->SourceRef_simpl_state_.SourceRef_->qnameref_present ();
}

::std::string SourceRef_simpl::
qnameref ()
{
  return this->SourceRef_simpl_state_.SourceRef_->qnameref ();
}

// SourceList_simpl
//

void SourceList_simpl::
pre (const ::SourceList& x)
{
  this->SourceList_simpl_state_.SourceList_ = &x;
  this->SourceList_simpl_state_.SourceRef_ = 
  this->SourceList_simpl_state_.SourceList_->SourceRef ().begin ();
  this->SourceList_simpl_state_.SourceRef_end_ = 
  this->SourceList_simpl_state_.SourceList_->SourceRef ().end ();
}

bool SourceList_simpl::
SourceRef_next ()
{
  return this->SourceList_simpl_state_.SourceRef_ != 
  this->SourceList_simpl_state_.SourceRef_end_;
}

const ::SourceRef& SourceList_simpl::
SourceRef ()
{
  return *this->SourceList_simpl_state_.SourceRef_++;
}

// jProposalRef_simpl
//

void jProposalRef_simpl::
pre (const ::jProposalRef& x)
{
  this->jProposalRef_simpl_state_.jProposalRef_ = &x;
}

::std::string jProposalRef_simpl::
qnameref ()
{
  return this->jProposalRef_simpl_state_.jProposalRef_->qnameref ();
}

// jProposal_simpl
//

jProposal_simpl::
jProposal_simpl ()

: jProposal_sskel (&base_impl_)
{
}

void jProposal_simpl::
pre (const ::jProposal& x)
{
  this->base_impl_.pre (x);
  this->jProposal_simpl_state_.jProposal_ = &x;
}

bool jProposal_simpl::
jProposalRef_present ()
{
  return this->jProposal_simpl_state_.jProposal_->jProposalRef_present ();
}

const ::jProposalRef& jProposal_simpl::
jProposalRef ()
{
  return this->jProposal_simpl_state_.jProposal_->jProposalRef ();
}

// jProblemList_simpl
//

void jProblemList_simpl::
pre (const ::jProblemList& x)
{
  this->jProblemList_simpl_state_.jProblemList_ = &x;
  this->jProblemList_simpl_state_.jProblem_ = 
  this->jProblemList_simpl_state_.jProblemList_->jProblem ().begin ();
  this->jProblemList_simpl_state_.jProblem_end_ = 
  this->jProblemList_simpl_state_.jProblemList_->jProblem ().end ();
}

bool jProblemList_simpl::
jProblem_next ()
{
  return this->jProblemList_simpl_state_.jProblem_ != 
  this->jProblemList_simpl_state_.jProblem_end_;
}

const ::jProblem& jProblemList_simpl::
jProblem ()
{
  return *this->jProblemList_simpl_state_.jProblem_++;
}

// kmx_simpl
//

void kmx_simpl::
pre (const ::kmx& x)
{
  this->kmx_simpl_state_.kmx_ = &x;
}

::std::string kmx_simpl::
name ()
{
  return this->kmx_simpl_state_.kmx_->name ();
}

::std::string kmx_simpl::
version ()
{
  return this->kmx_simpl_state_.kmx_->version ();
}

const ::References& kmx_simpl::
References ()
{
  return this->kmx_simpl_state_.kmx_->References ();
}

const ::Content& kmx_simpl::
Content ()
{
  return this->kmx_simpl_state_.kmx_->Content ();
}

// Solution_simpl
//

void Solution_simpl::
pre (const ::Solution& x)
{
  this->Solution_simpl_state_.Solution_ = &x;
}

bool Solution_simpl::
idref_present ()
{
  return this->Solution_simpl_state_.Solution_->idref_present ();
}

unsigned int Solution_simpl::
idref ()
{
  return this->Solution_simpl_state_.Solution_->idref ();
}

// jProblem_simpl
//

void jProblem_simpl::
pre (const ::jProblem& x)
{
  this->jProblem_simpl_state_.jProblem_ = &x;
  this->jProblem_simpl_state_.Solution_ = 
  this->jProblem_simpl_state_.jProblem_->Solution ().begin ();
  this->jProblem_simpl_state_.Solution_end_ = 
  this->jProblem_simpl_state_.jProblem_->Solution ().end ();
}

unsigned int jProblem_simpl::
id ()
{
  return this->jProblem_simpl_state_.jProblem_->id ();
}

const ::PropertyListType& jProblem_simpl::
PropertyList ()
{
  return this->jProblem_simpl_state_.jProblem_->PropertyList ();
}

::std::string jProblem_simpl::
Text ()
{
  return this->jProblem_simpl_state_.jProblem_->Text ();
}

bool jProblem_simpl::
Solution_next ()
{
  return this->jProblem_simpl_state_.Solution_ != 
  this->jProblem_simpl_state_.Solution_end_;
}

const ::Solution& jProblem_simpl::
Solution ()
{
  return *this->jProblem_simpl_state_.Solution_++;
}

// References_simpl
//

void References_simpl::
pre (const ::References& x)
{
  this->References_simpl_state_.References_ = &x;
}

const ::RefSourceList& References_simpl::
RefSourceList ()
{
  return this->References_simpl_state_.References_->RefSourceList ();
}

const ::RefProposalTypeList& References_simpl::
RefProposalTypeList ()
{
  return this->References_simpl_state_.References_->RefProposalTypeList ();
}

// Content_simpl
//

void Content_simpl::
pre (const ::Content& x)
{
  this->Content_simpl_state_.Content_ = &x;
  this->Content_simpl_state_.Category_ = 
  this->Content_simpl_state_.Content_->Category ().begin ();
  this->Content_simpl_state_.Category_end_ = 
  this->Content_simpl_state_.Content_->Category ().end ();
}

bool Content_simpl::
Category_next ()
{
  return this->Content_simpl_state_.Category_ != 
  this->Content_simpl_state_.Category_end_;
}

const ::CategoryType& Content_simpl::
Category ()
{
  return *this->Content_simpl_state_.Category_++;
}

// RefSourceList_simpl
//

void RefSourceList_simpl::
pre (const ::RefSourceList& x)
{
  this->RefSourceList_simpl_state_.RefSourceList_ = &x;
  this->RefSourceList_simpl_state_.Source_ = 
  this->RefSourceList_simpl_state_.RefSourceList_->Source ().begin ();
  this->RefSourceList_simpl_state_.Source_end_ = 
  this->RefSourceList_simpl_state_.RefSourceList_->Source ().end ();
}

bool RefSourceList_simpl::
Source_next ()
{
  return this->RefSourceList_simpl_state_.Source_ != 
  this->RefSourceList_simpl_state_.Source_end_;
}

const ::Source& RefSourceList_simpl::
Source ()
{
  return *this->RefSourceList_simpl_state_.Source_++;
}

// RefProposalTypeList_simpl
//

void RefProposalTypeList_simpl::
pre (const ::RefProposalTypeList& x)
{
  this->RefProposalTypeList_simpl_state_.RefProposalTypeList_ = &x;
}

const ::jProposalList& RefProposalTypeList_simpl::
jProposalList ()
{
  return this->RefProposalTypeList_simpl_state_.RefProposalTypeList_->jProposalList ();
}

// Source_simpl
//

void Source_simpl::
pre (const ::Source& x)
{
  this->Source_simpl_state_.Source_ = &x;
}

::std::string Source_simpl::
qname ()
{
  return this->Source_simpl_state_.Source_->qname ();
}

::std::string Source_simpl::
uri ()
{
  return this->Source_simpl_state_.Source_->uri ();
}

const ::PropertyListType& Source_simpl::
PropertyList ()
{
  return this->Source_simpl_state_.Source_->PropertyList ();
}

// jProposalList_simpl
//

void jProposalList_simpl::
pre (const ::jProposalList& x)
{
  this->jProposalList_simpl_state_.jProposalList_ = &x;
  this->jProposalList_simpl_state_.jProposal_ = 
  this->jProposalList_simpl_state_.jProposalList_->jProposal ().begin ();
  this->jProposalList_simpl_state_.jProposal_end_ = 
  this->jProposalList_simpl_state_.jProposalList_->jProposal ().end ();
}

bool jProposalList_simpl::
jProposal_next ()
{
  return this->jProposalList_simpl_state_.jProposal_ != 
  this->jProposalList_simpl_state_.jProposal_end_;
}

const ::jProposalType& jProposalList_simpl::
jProposal ()
{
  return *this->jProposalList_simpl_state_.jProposal_++;
}

// kmx_saggr
//

kmx_saggr::
kmx_saggr ()
{
  this->LabelType_s_.serializers (this->unsigned_int_s_);

  this->jProposalRef_s_.serializers (this->idref_s_);

  this->jProblemList_s_.serializers (this->jProblem_s_);

  this->jProblem_s_.serializers (this->unsigned_int_s_,
                                 this->PropertyListType_s_,
                                 this->string_s_,
                                 this->Solution_s_);

  this->Solution_s_.serializers (this->unsigned_int_s_);

  this->CategoryType_s_.serializers (this->non_negative_integer_s_,
                                     this->string_s_,
                                     this->PropertyListType_s_,
                                     this->string_s_,
                                     this->CategoryType_s_,
                                     this->jGroupType_s_);

  this->kmx_s_.serializers (this->string_s_,
                            this->string_s_,
                            this->References_s_,
                            this->Content_s_);

  this->References_s_.serializers (this->RefSourceList_s_,
                                   this->RefProposalTypeList_s_);

  this->PropertyListType_s_.serializers (this->Property_s_);

  this->Property_s_.serializers (this->ncname_s_,
                                 this->string_s_);

  this->jProposalType_s_.serializers (this->boolean_s_,
                                      this->id_s_,
                                      this->LabelType_s_);

  this->ImageListType_s_.serializers (this->Image_s_);

  this->Image_s_.serializers (this->unsigned_int_s_,
                              this->uri_s_);

  this->jGroupType_s_.serializers (this->unsigned_int_s_,
                                   this->string_s_,
                                   this->PropertyListType_s_,
                                   this->SourceList_s_,
                                   this->string_s_,
                                   this->ImageListType_s_,
                                   this->string_s_,
                                   this->string_s_,
                                   this->jProposal_s_,
                                   this->jProblemList_s_);

  this->SourceList_s_.serializers (this->SourceRef_s_);

  this->SourceRef_s_.serializers (this->idref_s_);

  this->jProposal_s_.serializers (this->boolean_s_,
                                  this->id_s_,
                                  this->LabelType_s_,
                                  this->jProposalRef_s_);

  this->RefSourceList_s_.serializers (this->Source_s_);

  this->Source_s_.serializers (this->id_s_,
                               this->uri_s_,
                               this->PropertyListType_s_);

  this->RefProposalTypeList_s_.serializers (this->jProposalList_s_);

  this->jProposalList_s_.serializers (this->jProposalType_s_);

  this->Content_s_.serializers (this->CategoryType_s_);
}

const char* kmx_saggr::
root_name ()
{
  return "kmx";
}

const char* kmx_saggr::
root_namespace ()
{
  return "";
}

// Begin epilogue.
//
//
// End epilogue.

