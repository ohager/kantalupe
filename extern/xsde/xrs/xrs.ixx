// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

#ifndef XRS_IXX
#define XRS_IXX

// Begin prologue.
//
//
// End prologue.

// ResourceTypes
//

inline
ResourceTypes::
ResourceTypes ()
{
}

inline
ResourceTypes::
ResourceTypes (value_type v)
{
  value_ = v;
}

inline
void ResourceTypes::
value (value_type v)
{
  value_ = v;
}

// xrs
//

inline
const ::std::string& xrs::
id () const
{
  return this->id_;
}

inline
::std::string& xrs::
id ()
{
  return this->id_;
}

inline
void xrs::
id (const ::std::string& x)
{
  this->id_ = x;
}

inline
const ::std::string& xrs::
version () const
{
  return this->version_;
}

inline
::std::string& xrs::
version ()
{
  return this->version_;
}

inline
void xrs::
version (const ::std::string& x)
{
  this->version_ = x;
}

inline
const xrs::ResourceSet_sequence& xrs::
ResourceSet () const
{
  return this->ResourceSet_;
}

inline
xrs::ResourceSet_sequence& xrs::
ResourceSet ()
{
  return this->ResourceSet_;
}

// Resource
//

inline
const ::ResourceTypes& Resource::
type () const
{
  return this->type_;
}

inline
::ResourceTypes& Resource::
type ()
{
  return this->type_;
}

inline
void Resource::
type (const ::ResourceTypes& x)
{
  this->type_ = x;
}

inline
const ::std::string& Resource::
alias () const
{
  return this->alias_;
}

inline
::std::string& Resource::
alias ()
{
  return this->alias_;
}

inline
void Resource::
alias (const ::std::string& x)
{
  this->alias_ = x;
}

// ResourceSet
//

inline
const ::std::string& ResourceSet::
prefix () const
{
  return this->prefix_;
}

inline
::std::string& ResourceSet::
prefix ()
{
  return this->prefix_;
}

inline
void ResourceSet::
prefix (const ::std::string& x)
{
  this->prefix_ = x;
}

inline
const ResourceSet::Resource_sequence& ResourceSet::
Resource () const
{
  return this->Resource_;
}

inline
ResourceSet::Resource_sequence& ResourceSet::
Resource ()
{
  return this->Resource_;
}

// Begin epilogue.
//
//
// End epilogue.

#endif // XRS_IXX
